[{"description":"","id":"open world map","keyword":"Feature","line":1,"name":"Open World Map","uri":".\\test\\features\\open_map.feature","elements":[{"keyword":"Scenario","type":"scenario","id":"open world map;user taps open world map button","name":"User Taps Open World Map button","description":"","line":7,"steps":[{"keyword":"Given ","name":"There is a  \"See World Map\"button","line":8,"match":{"location":".\\test\\features\\open_map.feature:8"},"result":{"status":"failed","duration":0,"error_message":"GherkinStepNotDefinedException:       Step definition not found for text:\n\n        'Given There is a  \"See World Map\"button'\n\n      File path: .\\test\\features\\open_map.feature#7\n      Line:      Given There is a  \"See World Map\"button\n\n      ---------------------------------------------\n\n      You must implement the step like below and add the class to the 'stepDefinitions' property in your configuration:\n\n      /// The 'Given' class prefix can be replaced with 'Then', 'When' 'And' or 'But'\n      /// All classes can take up to 5 input parameters. With more, you should probably use a table.\n      /// For example: `When4<String, bool, int, num>`\n      /// You can also specify the type of world context you want\n      /// `When4WithWorld<String, bool, int, num, MyWorld>`\n      class Given_Given_There_is_a___See_World_Map_button extends Given1<String> {\n        @override\n        RegExp get pattern => RegExp(r\"There is a  \"See World Map\"button\");\n\n        @override\n        Future<void> executeStep(String input1) async {\n          // If the step is \"Given I do a 'windy pop'\"\n          // in this example, input1 would equal 'windy pop'\n\n          // your code...\n        }\n      }\n      \n\n#0      FeatureFileRunner._matchStepToExecutableStep (package:gherkin/src/feature_file_runner.dart:394:7)\n#1      FeatureFileRunner._runStep (package:gherkin/src/feature_file_runner.dart:315:20)\n#2      _rootRunUnary (dart:async/zone.dart:1198:47)\n#3      _CustomZone.runUnary (dart:async/zone.dart:1100:19)\n#4      _FutureListener.handleValue (dart:async/future_impl.dart:143:18)\n#5      Future._propagateToListeners.handleValueCallback (dart:async/future_impl.dart:696:45)\n#6      Future._propagateToListeners (dart:async/future_impl.dart:725:32)\n#7      Future._completeWithValue (dart:async/future_impl.dart:529:5)\n#8      _AsyncAwaitCompleter.complete (dart:async-patch/async_patch.dart:40:15)\n#9      _completeOnAsyncReturn (dart:async-patch/async_patch.dart:311:13)\n#10     AggregatedReporter.onStepStarted (package:gherkin/src/reporters/aggregated_reporter.dart)\n#11     _rootRunUnary (dart:async/zone.dart:1198:47)\n#12     _CustomZone.runUnary (dart:async/zone.dart:1100:19)\n#13     _FutureListener.handleValue (dart:async/future_impl.dart:143:18)\n#14     Future._propagateToListeners.handleValueCallback (dart:async/future_impl.dart:696:45)\n#15     Future._propagateToListeners (dart:async/future_impl.dart:725:32)\n#16     Future._completeWithValue (dart:async/future_impl.dart:529:5)\n#17     _AsyncAwaitCompleter.complete (dart:async-patch/async_patch.dart:40:15)\n#18     _completeOnAsyncReturn (dart:async-patch/async_patch.dart:311:13)\n#19     AggregatedReporter._invokeReporters (package:gherkin/src/reporters/aggregated_reporter.dart)\n#20     _rootRunUnary (dart:async/zone.dart:1198:47)\n#21     _CustomZone.runUnary (dart:async/zone.dart:1100:19)\n#22     _FutureListener.handleValue (dart:async/future_impl.dart:143:18)\n#23     Future._propagateToListeners.handleValueCallback (dart:async/future_impl.dart:696:45)\n#24     Future._propagateToListeners (dart:async/future_impl.dart:725:32)\n#25     Future._completeWithValue (dart:async/future_impl.dart:529:5)\n#26     _AsyncAwaitCompleter.complete (dart:async-patch/async_patch.dart:40:15)\n#27     _completeOnAsyncReturn (dart:async-patch/async_patch.dart:311:13)\n#28     AggregatedReporter.onStepStarted.<anonymous closure> (package:gherkin/src/reporters/aggregated_reporter.dart)\n#29     _rootRunUnary (dart:async/zone.dart:1198:47)\n#30     _CustomZone.runUnary (dart:async/zone.dart:1100:19)\n#31     _FutureListener.handleValue (dart:async/future_impl.dart:143:18)\n#32     Future._propagateToListeners.handleValueCallback (dart:async/future_impl.dart:696:45)\n#33     Future._propagateToListeners (dart:async/future_impl.dart:725:32)\n#34     Future._completeWithValue (dart:async/future_impl.dart:529:5)\n#35     Future._asyncCompleteWithValue.<anonymous closure> (dart:async/future_impl.dart:567:7)\n#36     _rootRun (dart:async/zone.dart:1190:13)\n#37     _CustomZone.run (dart:async/zone.dart:1093:19)\n#38     _CustomZone.runGuarded (dart:async/zone.dart:997:7)\n#39     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1037:23)\n#40     _microtaskLoop (dart:async/schedule_microtask.dart:41:21)\n#41     _startMicrotaskLoop (dart:async/schedule_microtask.dart:50:5)"}}]}]}]